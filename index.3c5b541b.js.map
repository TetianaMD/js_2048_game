{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var createBoard = function createBoard() {\n        for(var i = 0; i < 4; i++){\n            grid[i] = [];\n            for(var j = 0; j < 4; j++)grid[i][j] = 0;\n        }\n        addNumber();\n        addNumber();\n        updateBoard();\n    };\n    var updateBoard = function updateBoard() {\n        var cells = document.querySelectorAll(\".field-cell\");\n        cells.forEach(function(cell, index) {\n            var row = Math.floor(index / 4);\n            var col = index % 4;\n            cell.textContent = grid[row][col] === 0 ? \"\" : grid[row][col];\n            cell.className = \"field-cell\";\n            if (grid[row][col] !== 0) cell.classList.add(\"field-cell--\" + grid[row][col]);\n        });\n        scoreDisplay.textContent = score;\n    };\n    var addNumber = function addNumber() {\n        var emptyCells = [];\n        for(var i = 0; i < 4; i++){\n            for(var j = 0; j < 4; j++)if (grid[i][j] === 0) emptyCells.push({\n                row: i,\n                col: j\n            });\n        }\n        if (emptyCells.length > 0) {\n            var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n            grid[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n        }\n    };\n    var move = function move(rowDirection, colDirection) {\n        var moved = false;\n        var merged = [];\n        for(var i = 0; i < 4; i++)merged[i] = [\n            false,\n            false,\n            false,\n            false\n        ];\n        for(var i1 = 0; i1 < 4; i1++)for(var j = 0; j < 4; j++){\n            var row = rowDirection === 1 ? 3 - i1 : i1;\n            var col = colDirection === 1 ? 3 - j : j;\n            if (grid[row][col] !== 0) {\n                var newRow = row;\n                var newCol = col;\n                while(newRow + rowDirection >= 0 && newRow + rowDirection < 4 && newCol + colDirection >= 0 && newCol + colDirection < 4 && grid[newRow + rowDirection][newCol + colDirection] === 0){\n                    newRow += rowDirection;\n                    newCol += colDirection;\n                }\n                if (newRow + rowDirection >= 0 && newRow + rowDirection < 4 && newCol + colDirection >= 0 && newCol + colDirection < 4 && grid[newRow + rowDirection][newCol + colDirection] === grid[row][col] && !merged[newRow + rowDirection][newCol + colDirection]) {\n                    newRow += rowDirection;\n                    newCol += colDirection;\n                    grid[newRow][newCol] *= 2;\n                    grid[row][col] = 0;\n                    score += grid[newRow][newCol];\n                    merged[newRow][newCol] = true;\n                    moved = true;\n                    if (grid[newRow][newCol] === 2048) messageWin.classList.remove(\"hidden\");\n                } else if (newRow !== row || newCol !== col) {\n                    grid[newRow][newCol] = grid[row][col];\n                    grid[row][col] = 0;\n                    moved = true;\n                }\n            }\n        }\n        if (moved) {\n            addNumber();\n            updateBoard();\n            checkGameOver();\n        }\n    };\n    var checkGameOver = function checkGameOver() {\n        var hasMoves = false;\n        for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n            if (grid[i][j] === 0) hasMoves = true;\n            if (i > 0 && grid[i][j] === grid[i - 1][j] || i < 3 && grid[i][j] === grid[i + 1][j] || j > 0 && grid[i][j] === grid[i][j - 1] || j < 3 && grid[i][j] === grid[i][j + 1]) hasMoves = true;\n        }\n        if (!hasMoves) messageLose.classList.remove(\"hidden\");\n    };\n    var scoreDisplay = document.querySelector(\".game-score\");\n    var messageWin = document.querySelector(\".message-win\");\n    var messageLose = document.querySelector(\".message-lose\");\n    var messageStart = document.querySelector(\".message-start\");\n    var startButton = document.querySelector(\".button.start\");\n    var grid = [];\n    var score = 0;\n    document.addEventListener(\"keydown\", function(e) {\n        switch(e.key){\n            case \"ArrowUp\":\n                move(-1, 0);\n                break;\n            case \"ArrowDown\":\n                move(1, 0);\n                break;\n            case \"ArrowLeft\":\n                move(0, -1);\n                break;\n            case \"ArrowRight\":\n                move(0, 1);\n                break;\n        }\n    });\n    startButton.addEventListener(\"click\", function() {\n        messageWin.classList.add(\"hidden\");\n        messageLose.classList.add(\"hidden\");\n        messageStart.classList.add(\"hidden\");\n        score = 0;\n        createBoard();\n        startButton.textContent = \"Restart\";\n        startButton.classList.remove(\"Start\");\n        startButton.classList.add(\"restart\");\n    });\n});\n\n//# sourceMappingURL=index.3c5b541b.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const scoreDisplay = document.querySelector('.game-score');\n  const messageWin = document.querySelector('.message-win');\n  const messageLose = document.querySelector('.message-lose');\n  const messageStart = document.querySelector('.message-start');\n  const startButton = document.querySelector('.button.start');\n\n  const grid = [];\n  let score = 0;\n\n  function createBoard() {\n    for (let i = 0; i < 4; i++) {\n      grid[i] = [];\n\n      for (let j = 0; j < 4; j++) {\n        grid[i][j] = 0;\n      }\n    }\n    addNumber();\n    addNumber();\n    updateBoard();\n  }\n\n  function updateBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, index) => {\n      const row = Math.floor(index / 4);\n      const col = index % 4;\n\n      cell.textContent = grid[row][col] === 0 ? '' : grid[row][col];\n      cell.className = 'field-cell';\n\n      if (grid[row][col] !== 0) {\n        cell.classList.add('field-cell--' + grid[row][col]);\n      }\n    });\n    scoreDisplay.textContent = score;\n  }\n\n  function addNumber() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          emptyCells.push({\n            row: i, col: j,\n          });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomCell\n        = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      grid[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  function move(rowDirection, colDirection) {\n    let moved = false;\n    const merged = [];\n\n    for (let i = 0; i < 4; i++) {\n      merged[i] = [false, false, false, false];\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const row = rowDirection === 1 ? 3 - i : i;\n        const col = colDirection === 1 ? 3 - j : j;\n\n        if (grid[row][col] !== 0) {\n          let newRow = row;\n          let newCol = col;\n\n          while (\n            newRow + rowDirection >= 0\n            && newRow + rowDirection < 4\n            && newCol + colDirection >= 0\n            && newCol + colDirection < 4\n            && grid[newRow + rowDirection][newCol + colDirection] === 0\n          ) {\n            newRow += rowDirection;\n            newCol += colDirection;\n          }\n\n          if (\n            newRow + rowDirection >= 0\n            && newRow + rowDirection < 4\n            && newCol + colDirection >= 0\n            && newCol + colDirection < 4\n            && grid[newRow + rowDirection][newCol + colDirection]\n            === grid[row][col]\n            && !merged[newRow + rowDirection][newCol + colDirection]\n          ) {\n            newRow += rowDirection;\n            newCol += colDirection;\n            grid[newRow][newCol] *= 2;\n            grid[row][col] = 0;\n            score += grid[newRow][newCol];\n            merged[newRow][newCol] = true;\n            moved = true;\n\n            if (grid[newRow][newCol] === 2048) {\n              messageWin.classList.remove('hidden');\n            }\n          } else if (newRow !== row || newCol !== col) {\n            grid[newRow][newCol] = grid[row][col];\n            grid[row][col] = 0;\n            moved = true;\n          }\n        }\n      }\n    }\n\n    if (moved) {\n      addNumber();\n      updateBoard();\n      checkGameOver();\n    }\n  }\n\n  function checkGameOver() {\n    let hasMoves = false;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          hasMoves = true;\n        }\n\n        if (\n          (i > 0 && grid[i][j] === grid[i - 1][j])\n          || (i < 3 && grid[i][j] === grid[i + 1][j])\n          || (j > 0 && grid[i][j] === grid[i][j - 1])\n          || (j < 3 && grid[i][j] === grid[i][j + 1])\n        ) {\n          hasMoves = true;\n        }\n      }\n    }\n\n    if (!hasMoves) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n\n  document.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'ArrowUp':\n        move(-1, 0);\n        break;\n      case 'ArrowDown':\n        move(1, 0);\n        break;\n      case 'ArrowLeft':\n        move(0, -1);\n        break;\n      case 'ArrowRight':\n        move(0, 1);\n        break;\n    }\n  });\n\n  startButton.addEventListener('click', () => {\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n    score = 0;\n    createBoard();\n\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('Start');\n    startButton.classList.add('restart');\n  });\n});\n"],"names":["document","addEventListener","createBoard","i","grid","j","addNumber","updateBoard","cells","querySelectorAll","forEach","cell","index","row","Math","floor","col","textContent","className","classList","add","scoreDisplay","score","emptyCells","push","length","randomCell","random","move","rowDirection","colDirection","moved","merged","i1","newRow","newCol","messageWin","remove","checkGameOver","hasMoves","messageLose","querySelector","messageStart","startButton","e","key"],"version":3,"file":"index.3c5b541b.js.map"}