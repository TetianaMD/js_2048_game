{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const scoreDisplay = document.querySelector('.game-score');\n  const messageWin = document.querySelector('.message-win');\n  const messageLose = document.querySelector('.message-lose');\n  const messageStart = document.querySelector('.message-start');\n  const startButton = document.querySelector('.button.start');\n\n  const grid = [];\n  let score = 0;\n\n  function createBoard() {\n    for (let i = 0; i < 4; i++) {\n      grid[i] = [];\n\n      for (let j = 0; j < 4; j++) {\n        grid[i][j] = 0;\n      }\n    }\n    addNumber();\n    addNumber();\n    updateBoard();\n  }\n\n  function updateBoard() {\n    const cells = document.querySelectorAll('.field-cell');\n\n    cells.forEach((cell, index) => {\n      const row = Math.floor(index / 4);\n      const col = index % 4;\n\n      cell.textContent = grid[row][col] === 0 ? '' : grid[row][col];\n      cell.className = 'field-cell';\n\n      if (grid[row][col] !== 0) {\n        cell.classList.add('field-cell--' + grid[row][col]);\n      }\n    });\n    scoreDisplay.textContent = score;\n  }\n\n  function addNumber() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          emptyCells.push({\n            row: i, col: j,\n          });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomCell\n        = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      grid[randomCell.row][randomCell.col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  function move(rowDirection, colDirection) {\n    let moved = false;\n    const merged = [];\n\n    for (let i = 0; i < 4; i++) {\n      merged[i] = [false, false, false, false];\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const row = rowDirection === 1 ? 3 - i : i;\n        const col = colDirection === 1 ? 3 - j : j;\n\n        if (grid[row][col] !== 0) {\n          let newRow = row;\n          let newCol = col;\n\n          while (\n            newRow + rowDirection >= 0\n            && newRow + rowDirection < 4\n            && newCol + colDirection >= 0\n            && newCol + colDirection < 4\n            && grid[newRow + rowDirection][newCol + colDirection] === 0\n          ) {\n            newRow += rowDirection;\n            newCol += colDirection;\n          }\n\n          if (\n            newRow + rowDirection >= 0\n            && newRow + rowDirection < 4\n            && newCol + colDirection >= 0\n            && newCol + colDirection < 4\n            && grid[newRow + rowDirection][newCol + colDirection]\n            === grid[row][col]\n            && !merged[newRow + rowDirection][newCol + colDirection]\n          ) {\n            newRow += rowDirection;\n            newCol += colDirection;\n            grid[newRow][newCol] *= 2;\n            grid[row][col] = 0;\n            score += grid[newRow][newCol];\n            merged[newRow][newCol] = true;\n            moved = true;\n\n            if (grid[newRow][newCol] === 2048) {\n              messageWin.classList.remove('hidden');\n            }\n          } else if (newRow !== row || newCol !== col) {\n            grid[newRow][newCol] = grid[row][col];\n            grid[row][col] = 0;\n            moved = true;\n          }\n        }\n      }\n    }\n\n    if (moved) {\n      addNumber();\n      updateBoard();\n      checkGameOver();\n    }\n  }\n\n  function checkGameOver() {\n    let hasMoves = false;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (grid[i][j] === 0) {\n          hasMoves = true;\n        }\n\n        if (\n          (i > 0 && grid[i][j] === grid[i - 1][j])\n          || (i < 3 && grid[i][j] === grid[i + 1][j])\n          || (j > 0 && grid[i][j] === grid[i][j - 1])\n          || (j < 3 && grid[i][j] === grid[i][j + 1])\n        ) {\n          hasMoves = true;\n        }\n      }\n    }\n\n    if (!hasMoves) {\n      messageLose.classList.remove('hidden');\n    }\n  }\n\n  document.addEventListener('keydown', (e) => {\n    switch (e.key) {\n      case 'ArrowUp':\n        move(-1, 0);\n        break;\n      case 'ArrowDown':\n        move(1, 0);\n        break;\n      case 'ArrowLeft':\n        move(0, -1);\n        break;\n      case 'ArrowRight':\n        move(0, 1);\n        break;\n    }\n  });\n\n  startButton.addEventListener('click', () => {\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n    score = 0;\n    createBoard();\n\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('Start');\n    startButton.classList.add('restart');\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}